;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 2016-04-16 12:01:15 p.m.
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x29B9      	GOTO       441
_interrupt:
0x0004	0x00FF      	MOVWF      R15
0x0005	0x0E03      	SWAPF      STATUS, 0
0x0006	0x0183      	CLRF       STATUS
0x0007	0x00C1      	MOVWF      ___saveSTATUS
0x0008	0x080A      	MOVF       PCLATH, 0
0x0009	0x00C0      	MOVWF      ___savePCLATH
0x000A	0x018A      	CLRF       PCLATH
0x000B	0x0870      	MOVF       R0, 0
0x000C	0x00A1      	MOVWF      33
0x000D	0x0871      	MOVF       R1, 0
0x000E	0x00A0      	MOVWF      32
0x000F	0x0804      	MOVF       FSR, 0
0x0010	0x00A2      	MOVWF      34
;esclab.mbas,43 :: 		sub procedure interrupt()
;esclab.mbas,44 :: 		GIE_bit = 0
0x0011	0x138B      	BCF        GIE_bit, 7
;esclab.mbas,45 :: 		if uart1_data_ready=1 then
0x0012	0x2117      	CALL       _UART1_Data_Ready
0x0013	0x0870      	MOVF       R0, 0
0x0014	0x3A01      	XORLW      1
0x0015	0x1D03      	BTFSS      STATUS, 2
0x0016	0x28D7      	GOTO       L__interrupt16
;esclab.mbas,46 :: 		Recivido=uart1_read
0x0017	0x210A      	CALL       _UART1_Read
0x0018	0x0870      	MOVF       R0, 0
0x0019	0x00BB      	MOVWF      _Recivido
;esclab.mbas,47 :: 		llamada[0]=llamada[1]
0x001A	0x083D      	MOVF       _Llamada+1, 0
0x001B	0x00BC      	MOVWF      _Llamada
;esclab.mbas,48 :: 		llamada[1]=llamada[2]
0x001C	0x083E      	MOVF       _Llamada+2, 0
0x001D	0x00BD      	MOVWF      _Llamada+1
;esclab.mbas,49 :: 		llamada[2]=llamada[3]
0x001E	0x083F      	MOVF       _Llamada+3, 0
0x001F	0x00BE      	MOVWF      _Llamada+2
;esclab.mbas,50 :: 		llamada[3]=recivido
0x0020	0x0870      	MOVF       R0, 0
0x0021	0x00BF      	MOVWF      _Llamada+3
;esclab.mbas,51 :: 		if Llamada[1]=esclavo then
0x0022	0x083D      	MOVF       _Llamada+1, 0
0x0023	0x0627      	XORWF      _Esclavo, 0
0x0024	0x1D03      	BTFSS      STATUS, 2
0x0025	0x28D7      	GOTO       L__interrupt19
;esclab.mbas,52 :: 		mensaje[0]=llamada[0]
0x0026	0x083C      	MOVF       _Llamada, 0
0x0027	0x1683      	BSF        STATUS, 5
0x0028	0x00A0      	MOVWF      _Mensaje
;esclab.mbas,53 :: 		Mensaje[1]=llamada[1]
0x0029	0x1283      	BCF        STATUS, 5
0x002A	0x083D      	MOVF       _Llamada+1, 0
0x002B	0x1683      	BSF        STATUS, 5
0x002C	0x00A1      	MOVWF      _Mensaje+1
;esclab.mbas,54 :: 		Longitud=2
0x002D	0x3002      	MOVLW      2
0x002E	0x1283      	BCF        STATUS, 5
0x002F	0x00B7      	MOVWF      _Longitud
;esclab.mbas,55 :: 		CalcularCRC
0x0030	0x2120      	CALL       _CalcularCRC
;esclab.mbas,56 :: 		CRC_ok=false
0x0031	0x01BA      	CLRF       _CRC_ok
;esclab.mbas,57 :: 		if Llamada[3]=crc_h then
0x0032	0x083F      	MOVF       _Llamada+3, 0
0x0033	0x0632      	XORWF      _CRC_H, 0
0x0034	0x1D03      	BTFSS      STATUS, 2
0x0035	0x28D7      	GOTO       L__interrupt22
;esclab.mbas,58 :: 		if Llamada[2]=crc_l then
0x0036	0x083E      	MOVF       _Llamada+2, 0
0x0037	0x0633      	XORWF      _CRC_L, 0
0x0038	0x1D03      	BTFSS      STATUS, 2
0x0039	0x28D7      	GOTO       L__interrupt25
;esclab.mbas,59 :: 		if Llamada[0]=15 then
0x003A	0x083C      	MOVF       _Llamada, 0
0x003B	0x3A0F      	XORLW      15
0x003C	0x1D03      	BTFSS      STATUS, 2
0x003D	0x2840      	GOTO       L__interrupt28
;esclab.mbas,60 :: 		ledrojo=0                ' encender led rojo
0x003E	0x1007      	BCF        PORTC, 0
;esclab.mbas,61 :: 		portc.1=1                ' apagar led verde
0x003F	0x1487      	BSF        PORTC, 1
L__interrupt28:
;esclab.mbas,63 :: 		if Llamada[0]=6 then
0x0040	0x083C      	MOVF       _Llamada, 0
0x0041	0x3A06      	XORLW      6
0x0042	0x1D03      	BTFSS      STATUS, 2
0x0043	0x2847      	GOTO       L__interrupt31
;esclab.mbas,64 :: 		portc.0=1                ' apagar el led rojo
0x0044	0x1407      	BSF        PORTC, 0
;esclab.mbas,65 :: 		portc.1=0                ' encender led verde
0x0045	0x1087      	BCF        PORTC, 1
;esclab.mbas,67 :: 		porta.4=1
0x0046	0x1605      	BSF        PORTA, 4
L__interrupt31:
;esclab.mbas,69 :: 		if Llamada[0]=5 then
0x0047	0x083C      	MOVF       _Llamada, 0
0x0048	0x3A05      	XORLW      5
0x0049	0x1D03      	BTFSS      STATUS, 2
0x004A	0x28D7      	GOTO       L__interrupt34
;esclab.mbas,70 :: 		clrwdt
0x004B	0x0064      	CLRWDT
;esclab.mbas,71 :: 		CRC_ok=true
0x004C	0x30FF      	MOVLW      255
0x004D	0x00BA      	MOVWF      _CRC_ok
;esclab.mbas,72 :: 		porta.5=0
0x004E	0x1285      	BCF        PORTA, 5
;esclab.mbas,73 :: 		adc_init
0x004F	0x2154      	CALL       _ADC_Init
;esclab.mbas,74 :: 		Suma=0
0x0050	0x01B8      	CLRF       _Suma
0x0051	0x01B9      	CLRF       _Suma+1
;esclab.mbas,75 :: 		for Iter=1 to 3
0x0052	0x3001      	MOVLW      1
0x0053	0x00B1      	MOVWF      _Iter
L__interrupt37:
;esclab.mbas,76 :: 		Temp = adc_read(0)
0x0054	0x01C4      	CLRF       FARG_ADC_Read_channel
0x0055	0x2166      	CALL       _ADC_Read
0x0056	0x0870      	MOVF       R0, 0
0x0057	0x00A3      	MOVWF      _Temp
0x0058	0x0871      	MOVF       R0+1, 0
0x0059	0x00A4      	MOVWF      _Temp+1
;esclab.mbas,77 :: 		Suma=suma+temp
0x005A	0x0870      	MOVF       R0, 0
0x005B	0x07B8      	ADDWF      _Suma, 1
0x005C	0x0871      	MOVF       R0+1, 0
0x005D	0x1803      	BTFSC      STATUS, 0
0x005E	0x3E01      	ADDLW      1
0x005F	0x07B9      	ADDWF      _Suma+1, 1
;esclab.mbas,78 :: 		next Iter
0x0060	0x0831      	MOVF       _Iter, 0
0x0061	0x3A03      	XORLW      3
0x0062	0x1903      	BTFSC      STATUS, 2
0x0063	0x2866      	GOTO       L__interrupt40
0x0064	0x0AB1      	INCF       _Iter, 1
0x0065	0x2854      	GOTO       L__interrupt37
L__interrupt40:
;esclab.mbas,79 :: 		Temp=suma/3
0x0066	0x3003      	MOVLW      3
0x0067	0x00F4      	MOVWF      R4
0x0068	0x01F5      	CLRF       R4+1
0x0069	0x0838      	MOVF       _Suma, 0
0x006A	0x00F0      	MOVWF      R0
0x006B	0x0839      	MOVF       _Suma+1, 0
0x006C	0x00F1      	MOVWF      R0+1
0x006D	0x2192      	CALL       _Div_16x16_U
0x006E	0x0870      	MOVF       R0, 0
0x006F	0x00A3      	MOVWF      _Temp
0x0070	0x0871      	MOVF       R0+1, 0
0x0071	0x00A4      	MOVWF      _Temp+1
;esclab.mbas,80 :: 		Temp1_H=hi(temp)
0x0072	0x0824      	MOVF       _Temp+1, 0
0x0073	0x00A5      	MOVWF      _Temp1_H
;esclab.mbas,81 :: 		Temp1_L=lo(temp)
0x0074	0x0823      	MOVF       _Temp, 0
0x0075	0x00AF      	MOVWF      _Temp1_L
;esclab.mbas,82 :: 		if portc.2=0 then
0x0076	0x1907      	BTFSC      PORTC, 2
0x0077	0x287A      	GOTO       L__interrupt42
;esclab.mbas,83 :: 		Entrada1=0
0x0078	0x01B0      	CLRF       _Entrada1
0x0079	0x287C      	GOTO       L__interrupt43
;esclab.mbas,84 :: 		else
L__interrupt42:
;esclab.mbas,85 :: 		Entrada1=1
0x007A	0x3001      	MOVLW      1
0x007B	0x00B0      	MOVWF      _Entrada1
;esclab.mbas,86 :: 		end if
L__interrupt43:
;esclab.mbas,87 :: 		if portc.3=0 then
0x007C	0x1987      	BTFSC      PORTC, 3
0x007D	0x2880      	GOTO       L__interrupt45
;esclab.mbas,88 :: 		Entrada2=0
0x007E	0x01AE      	CLRF       _Entrada2
0x007F	0x2882      	GOTO       L__interrupt46
;esclab.mbas,89 :: 		else
L__interrupt45:
;esclab.mbas,90 :: 		Entrada2=1
0x0080	0x3001      	MOVLW      1
0x0081	0x00AE      	MOVWF      _Entrada2
;esclab.mbas,91 :: 		end if
L__interrupt46:
;esclab.mbas,92 :: 		longitud=94
0x0082	0x305E      	MOVLW      94
0x0083	0x00B7      	MOVWF      _Longitud
;esclab.mbas,93 :: 		Mensaje[0]=0
0x0084	0x1683      	BSF        STATUS, 5
0x0085	0x01A0      	CLRF       _Mensaje
;esclab.mbas,94 :: 		mensaje[1]=esclavo
0x0086	0x1283      	BCF        STATUS, 5
0x0087	0x0827      	MOVF       _Esclavo, 0
0x0088	0x1683      	BSF        STATUS, 5
0x0089	0x00A1      	MOVWF      _Mensaje+1
;esclab.mbas,95 :: 		Mensaje[2]=temp1_h
0x008A	0x1283      	BCF        STATUS, 5
0x008B	0x0825      	MOVF       _Temp1_H, 0
0x008C	0x1683      	BSF        STATUS, 5
0x008D	0x00A2      	MOVWF      _Mensaje+2
;esclab.mbas,96 :: 		Mensaje[3]=temp1_l
0x008E	0x1283      	BCF        STATUS, 5
0x008F	0x082F      	MOVF       _Temp1_L, 0
0x0090	0x1683      	BSF        STATUS, 5
0x0091	0x00A3      	MOVWF      _Mensaje+3
;esclab.mbas,97 :: 		Mensaje[4]=0
0x0092	0x01A4      	CLRF       _Mensaje+4
;esclab.mbas,98 :: 		Mensaje[5]=0
0x0093	0x01A5      	CLRF       _Mensaje+5
;esclab.mbas,99 :: 		Mensaje[6]=entrada1
0x0094	0x1283      	BCF        STATUS, 5
0x0095	0x0830      	MOVF       _Entrada1, 0
0x0096	0x1683      	BSF        STATUS, 5
0x0097	0x00A6      	MOVWF      _Mensaje+6
;esclab.mbas,100 :: 		Mensaje[7]=entrada2
0x0098	0x1283      	BCF        STATUS, 5
0x0099	0x082E      	MOVF       _Entrada2, 0
0x009A	0x1683      	BSF        STATUS, 5
0x009B	0x00A7      	MOVWF      _Mensaje+7
;esclab.mbas,102 :: 		Mensaje[8]=49
0x009C	0x3031      	MOVLW      49
0x009D	0x00A8      	MOVWF      _Mensaje+8
;esclab.mbas,103 :: 		mensaje[9]=48
0x009E	0x3030      	MOVLW      48
0x009F	0x00A9      	MOVWF      _Mensaje+9
;esclab.mbas,104 :: 		Mensaje[10]=48
0x00A0	0x3030      	MOVLW      48
0x00A1	0x00AA      	MOVWF      _Mensaje+10
;esclab.mbas,105 :: 		Mensaje[11]=58
0x00A2	0x303A      	MOVLW      58
0x00A3	0x00AB      	MOVWF      _Mensaje+11
;esclab.mbas,107 :: 		Mensaje[92]=version_h
0x00A4	0x1283      	BCF        STATUS, 5
0x00A5	0x0826      	MOVF       _Version_H, 0
0x00A6	0x1683      	BSF        STATUS, 5
0x00A7	0x00FC      	MOVWF      _Mensaje+92
;esclab.mbas,108 :: 		Mensaje[93]=version_l
0x00A8	0x1283      	BCF        STATUS, 5
0x00A9	0x0828      	MOVF       _Version_L, 0
0x00AA	0x1683      	BSF        STATUS, 5
0x00AB	0x00FD      	MOVWF      _Mensaje+93
;esclab.mbas,109 :: 		clrwdt
0x00AC	0x0064      	CLRWDT
;esclab.mbas,110 :: 		calcularcrc
0x00AD	0x2120      	CALL       _CalcularCRC
;esclab.mbas,111 :: 		portc.1=0
0x00AE	0x1087      	BCF        PORTC, 1
;esclab.mbas,112 :: 		portc.4=1
0x00AF	0x1607      	BSF        PORTC, 4
;esclab.mbas,113 :: 		portc.5=1
0x00B0	0x1687      	BSF        PORTC, 5
;esclab.mbas,114 :: 		for Iter=0 to longitud   -1
0x00B1	0x01B1      	CLRF       _Iter
L__interrupt47:
0x00B2	0x0337      	DECF       _Longitud, 0
0x00B3	0x00C3      	MOVWF      FLOC__interrupt
0x00B4	0x0831      	MOVF       _Iter, 0
0x00B5	0x0243      	SUBWF      FLOC__interrupt, 0
0x00B6	0x1C03      	BTFSS      STATUS, 0
0x00B7	0x28C4      	GOTO       L__interrupt51
;esclab.mbas,115 :: 		uart1_write(mensaje[iter])
0x00B8	0x0831      	MOVF       _Iter, 0
0x00B9	0x3EA0      	ADDLW      _Mensaje
0x00BA	0x0084      	MOVWF      FSR
0x00BB	0x0800      	MOVF       INDF, 0
0x00BC	0x00C4      	MOVWF      FARG_UART1_Write_data_
0x00BD	0x21AF      	CALL       _UART1_Write
;esclab.mbas,116 :: 		next iter
0x00BE	0x0831      	MOVF       _Iter, 0
0x00BF	0x0643      	XORWF      FLOC__interrupt, 0
0x00C0	0x1903      	BTFSC      STATUS, 2
0x00C1	0x28C4      	GOTO       L__interrupt51
0x00C2	0x0AB1      	INCF       _Iter, 1
0x00C3	0x28B2      	GOTO       L__interrupt47
L__interrupt51:
;esclab.mbas,117 :: 		uart1_write(crc_l)
0x00C4	0x0833      	MOVF       _CRC_L, 0
0x00C5	0x00C4      	MOVWF      FARG_UART1_Write_data_
0x00C6	0x21AF      	CALL       _UART1_Write
;esclab.mbas,118 :: 		uart1_write(crc_h)
0x00C7	0x0832      	MOVF       _CRC_H, 0
0x00C8	0x00C4      	MOVWF      FARG_UART1_Write_data_
0x00C9	0x21AF      	CALL       _UART1_Write
;esclab.mbas,119 :: 		clrwdt
0x00CA	0x0064      	CLRWDT
;esclab.mbas,120 :: 		delay_ms(5)
0x00CB	0x3007      	MOVLW      7
0x00CC	0x00FC      	MOVWF      R12
0x00CD	0x307D      	MOVLW      125
0x00CE	0x00FD      	MOVWF      R13
L__interrupt52:
0x00CF	0x0BFD      	DECFSZ     R13, 1
0x00D0	0x28CF      	GOTO       L__interrupt52
0x00D1	0x0BFC      	DECFSZ     R12, 1
0x00D2	0x28CF      	GOTO       L__interrupt52
;esclab.mbas,121 :: 		portc.4=0
0x00D3	0x1207      	BCF        PORTC, 4
;esclab.mbas,122 :: 		portc.5=0
0x00D4	0x1287      	BCF        PORTC, 5
;esclab.mbas,123 :: 		porta.5=1
0x00D5	0x1685      	BSF        PORTA, 5
;esclab.mbas,124 :: 		portc.1=1
0x00D6	0x1487      	BSF        PORTC, 1
L__interrupt34:
;esclab.mbas,125 :: 		end if
L__interrupt25:
;esclab.mbas,126 :: 		end if
L__interrupt22:
;esclab.mbas,127 :: 		end if
L__interrupt19:
;esclab.mbas,129 :: 		end if
L__interrupt16:
;esclab.mbas,131 :: 		GIE_bit = 1
0x00D7	0x178B      	BSF        GIE_bit, 7
;esclab.mbas,132 :: 		end sub
L__interrupt64:
0x00D8	0x0821      	MOVF       33, 0
0x00D9	0x00F0      	MOVWF      R0
0x00DA	0x0820      	MOVF       32, 0
0x00DB	0x00F1      	MOVWF      R1
0x00DC	0x0822      	MOVF       34, 0
0x00DD	0x0084      	MOVWF      FSR
0x00DE	0x0840      	MOVF       ___savePCLATH, 0
0x00DF	0x008A      	MOVWF      PCLATH
0x00E0	0x0E41      	SWAPF      ___saveSTATUS, 0
0x00E1	0x0083      	MOVWF      STATUS
0x00E2	0x0EFF      	SWAPF      R15, 1
0x00E3	0x0E7F      	SWAPF      R15, 0
0x00E4	0x0009      	RETFIE
; end of _interrupt
_Delay_22us:
;__Lib_Delays.mbas,37 :: 		sub procedure Delay_22us()
;__Lib_Delays.mbas,38 :: 		Delay_us(22)
0x00E5	0x3007      	MOVLW      7
0x00E6	0x1283      	BCF        STATUS, 5
0x00E7	0x1303      	BCF        STATUS, 6
0x00E8	0x00FD      	MOVWF      R13
L__Delay_22us5:
0x00E9	0x0BFD      	DECFSZ     R13, 1
0x00EA	0x28E9      	GOTO       L__Delay_22us5
;__Lib_Delays.mbas,39 :: 		end sub
0x00EB	0x0008      	RETURN
; end of _Delay_22us
_EEPROM_Read:
;__Lib_EEPROM.mpas,13 :: 		
;__Lib_EEPROM.mpas,14 :: 		
0x00EC	0x1283      	BCF        STATUS, 5
0x00ED	0x1303      	BCF        STATUS, 6
0x00EE	0x0842      	MOVF       FARG_EEPROM_Read_address, 0
0x00EF	0x1703      	BSF        STATUS, 6
0x00F0	0x008D      	MOVWF      EEADR
;__Lib_EEPROM.mpas,15 :: 		
0x00F1	0x1683      	BSF        STATUS, 5
0x00F2	0x138C      	BCF        EECON1, 7
;__Lib_EEPROM.mpas,21 :: 		
0x00F3	0x140C      	BSF        EECON1, 0
;__Lib_EEPROM.mpas,22 :: 		
0x00F4	0x1283      	BCF        STATUS, 5
0x00F5	0x080C      	MOVF       EEDATA, 0
0x00F6	0x00F1      	MOVWF      R1
;__Lib_EEPROM.mpas,23 :: 		
0x00F7	0x0871      	MOVF       R1, 0
0x00F8	0x00F0      	MOVWF      R0
0x00F9	0x0008      	RETURN
; end of _EEPROM_Read
_UART1_Init:
;__Lib_UART_c67.mpas,33 :: 		
;__Lib_UART_c67.mpas,34 :: 		
0x00FA	0x1683      	BSF        STATUS, 5
0x00FB	0x1303      	BCF        STATUS, 6
0x00FC	0x1698      	BSF        TXSTA, 5
;__Lib_UART_c67.mpas,35 :: 		
0x00FD	0x3090      	MOVLW      144
0x00FE	0x1283      	BCF        STATUS, 5
0x00FF	0x0098      	MOVWF      RCSTA
;__Lib_UART_c67.mpas,36 :: 		
0x0100	0x1683      	BSF        STATUS, 5
0x0101	0x1787      	BSF        TRISC7_bit, 7
;__Lib_UART_c67.mpas,37 :: 		
0x0102	0x1307      	BCF        TRISC6_bit, 6
;__Lib_UART_c67.mpas,38 :: 		
L__UART1_Init2:
0x0103	0x1283      	BCF        STATUS, 5
0x0104	0x1E8C      	BTFSS      PIR1, 5
0x0105	0x2909      	GOTO       L__UART1_Init3
;__Lib_UART_c67.mpas,39 :: 		
0x0106	0x081A      	MOVF       RCREG, 0
0x0107	0x00F0      	MOVWF      R0
0x0108	0x2903      	GOTO       L__UART1_Init2
L__UART1_Init3:
;__Lib_UART_c67.mpas,40 :: 		
0x0109	0x0008      	RETURN
; end of _UART1_Init
_UART1_Read:
;__Lib_UART_c67.mpas,54 :: 		
;__Lib_UART_c67.mpas,55 :: 		
0x010A	0x1283      	BCF        STATUS, 5
0x010B	0x1303      	BCF        STATUS, 6
0x010C	0x081A      	MOVF       RCREG, 0
0x010D	0x00F2      	MOVWF      R2
;__Lib_UART_c67.mpas,56 :: 		
0x010E	0x1C98      	BTFSS      RCSTA, 1
0x010F	0x2912      	GOTO       L__UART1_Read9
;__Lib_UART_c67.mpas,58 :: 		
0x0110	0x1218      	BCF        RCSTA, 4
;__Lib_UART_c67.mpas,59 :: 		
0x0111	0x1618      	BSF        RCSTA, 4
;__Lib_UART_c67.mpas,60 :: 		
L__UART1_Read9:
;__Lib_UART_c67.mpas,61 :: 		
0x0112	0x0872      	MOVF       R2, 0
0x0113	0x00F1      	MOVWF      R1
;__Lib_UART_c67.mpas,62 :: 		
0x0114	0x0871      	MOVF       R1, 0
0x0115	0x00F0      	MOVWF      R0
0x0116	0x0008      	RETURN
; end of _UART1_Read
_UART1_Data_Ready:
;__Lib_UART_c67.mpas,46 :: 		
;__Lib_UART_c67.mpas,47 :: 		
0x0117	0x3000      	MOVLW      0
0x0118	0x1283      	BCF        STATUS, 5
0x0119	0x1303      	BCF        STATUS, 6
0x011A	0x1A8C      	BTFSC      PIR1, 5
0x011B	0x3001      	MOVLW      1
0x011C	0x00F1      	MOVWF      R1
;__Lib_UART_c67.mpas,48 :: 		
0x011D	0x0871      	MOVF       R1, 0
0x011E	0x00F0      	MOVWF      R0
0x011F	0x0008      	RETURN
; end of _UART1_Data_Ready
_CalcularCRC:
;esclab.mbas,28 :: 		sub procedure CalcularCRC()
;esclab.mbas,29 :: 		crc=65535
0x0120	0x30FF      	MOVLW      255
0x0121	0x1283      	BCF        STATUS, 5
0x0122	0x1303      	BCF        STATUS, 6
0x0123	0x00B5      	MOVWF      _CRC
0x0124	0x30FF      	MOVLW      255
0x0125	0x00B6      	MOVWF      _CRC+1
;esclab.mbas,30 :: 		for iter=0 to Longitud - 1
0x0126	0x01B1      	CLRF       _Iter
L__CalcularCRC1:
0x0127	0x0337      	DECF       _Longitud, 0
0x0128	0x00F2      	MOVWF      R2
0x0129	0x0831      	MOVF       _Iter, 0
0x012A	0x0272      	SUBWF      R2, 0
0x012B	0x1C03      	BTFSS      STATUS, 0
0x012C	0x294F      	GOTO       L__CalcularCRC5
;esclab.mbas,31 :: 		crc=crc xor mensaje[iter]
0x012D	0x0831      	MOVF       _Iter, 0
0x012E	0x3EA0      	ADDLW      _Mensaje
0x012F	0x0084      	MOVWF      FSR
0x0130	0x0800      	MOVF       INDF, 0
0x0131	0x06B5      	XORWF      _CRC, 1
0x0132	0x3000      	MOVLW      0
0x0133	0x06B6      	XORWF      _CRC+1, 1
;esclab.mbas,32 :: 		for bites= 1 to 8
0x0134	0x3001      	MOVLW      1
0x0135	0x00B4      	MOVWF      _bites
L__CalcularCRC7:
;esclab.mbas,33 :: 		if crc mod 2 then
0x0136	0x1C35      	BTFSS      _CRC, 0
0x0137	0x2940      	GOTO       L__CalcularCRC12
;esclab.mbas,34 :: 		crc=(crc / 2) xor 40961
0x0138	0x0CB6      	RRF        _CRC+1, 1
0x0139	0x0CB5      	RRF        _CRC, 1
0x013A	0x13B6      	BCF        _CRC+1, 7
0x013B	0x3001      	MOVLW      1
0x013C	0x06B5      	XORWF      _CRC, 1
0x013D	0x30A0      	MOVLW      160
0x013E	0x06B6      	XORWF      _CRC+1, 1
0x013F	0x2943      	GOTO       L__CalcularCRC13
;esclab.mbas,35 :: 		else
L__CalcularCRC12:
;esclab.mbas,36 :: 		crc=crc / 2
0x0140	0x0CB6      	RRF        _CRC+1, 1
0x0141	0x0CB5      	RRF        _CRC, 1
0x0142	0x13B6      	BCF        _CRC+1, 7
;esclab.mbas,37 :: 		end if
L__CalcularCRC13:
;esclab.mbas,38 :: 		next bites
0x0143	0x0834      	MOVF       _bites, 0
0x0144	0x3A08      	XORLW      8
0x0145	0x1903      	BTFSC      STATUS, 2
0x0146	0x2949      	GOTO       L__CalcularCRC10
0x0147	0x0AB4      	INCF       _bites, 1
0x0148	0x2936      	GOTO       L__CalcularCRC7
L__CalcularCRC10:
;esclab.mbas,39 :: 		next iter
0x0149	0x0831      	MOVF       _Iter, 0
0x014A	0x0672      	XORWF      R2, 0
0x014B	0x1903      	BTFSC      STATUS, 2
0x014C	0x294F      	GOTO       L__CalcularCRC5
0x014D	0x0AB1      	INCF       _Iter, 1
0x014E	0x2927      	GOTO       L__CalcularCRC1
L__CalcularCRC5:
;esclab.mbas,40 :: 		CRC_h=hi(crc)
0x014F	0x0836      	MOVF       _CRC+1, 0
0x0150	0x00B2      	MOVWF      _CRC_H
;esclab.mbas,41 :: 		CRC_l=lo(crc)
0x0151	0x0835      	MOVF       _CRC, 0
0x0152	0x00B3      	MOVWF      _CRC_L
;esclab.mbas,42 :: 		end sub
0x0153	0x0008      	RETURN
; end of _CalcularCRC
_ADC_Init:
;__Lib_ADC_A_C.mpas,17 :: 		
;__Lib_ADC_A_C.mpas,18 :: 		
0x0154	0x30FF      	MOVLW      _ADC_Get_Sample
0x0155	0x1283      	BCF        STATUS, 5
0x0156	0x1303      	BCF        STATUS, 6
0x0157	0x00AB      	MOVWF      _ADC_Get_Sample_Ptr
0x0158	0x30FF      	MOVLW      hi_addr(_ADC_Get_Sample)
0x0159	0x00AC      	MOVWF      _ADC_Get_Sample_Ptr+1
0x015A	0x30FF      	MOVLW      FARG_ADC_Get_Sample_channel
0x015B	0x00AD      	MOVWF      _ADC_Get_Sample_Ptr+2
0x015C	0x30FF      	MOVLW      hi_addr(FARG_ADC_Get_Sample_channel)
;__Lib_ADC_A_C.mpas,20 :: 		
0x015D	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.mpas,21 :: 		
0x015E	0x30C0      	MOVLW      192
0x015F	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.mpas,22 :: 		
0x0160	0x1683      	BSF        STATUS, 5
0x0161	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.mpas,23 :: 		
0x0162	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.mpas,26 :: 		
0x0163	0x1283      	BCF        STATUS, 5
0x0164	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.mpas,27 :: 		
0x0165	0x0008      	RETURN
; end of _ADC_Init
_ADC_Read:
;__Lib_ADC_A_C.mpas,53 :: 		
;__Lib_ADC_A_C.mpas,54 :: 		
0x0166	0x1283      	BCF        STATUS, 5
0x0167	0x1303      	BCF        STATUS, 6
0x0168	0x019F      	CLRF       ADCON0
;__Lib_ADC_A_C.mpas,55 :: 		
0x0169	0x30C0      	MOVLW      192
0x016A	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.mpas,56 :: 		
0x016B	0x1683      	BSF        STATUS, 5
0x016C	0x171F      	BSF        ADCON1, 6
;__Lib_ADC_A_C.mpas,57 :: 		
0x016D	0x179F      	BSF        ADCON1, 7
;__Lib_ADC_A_C.mpas,58 :: 		
0x016E	0x1283      	BCF        STATUS, 5
0x016F	0x0844      	MOVF       FARG_ADC_Read_channel, 0
0x0170	0x00F0      	MOVWF      R0
0x0171	0x0DF0      	RLF        R0, 1
0x0172	0x1070      	BCF        R0, 0
0x0173	0x0DF0      	RLF        R0, 1
0x0174	0x1070      	BCF        R0, 0
0x0175	0x0DF0      	RLF        R0, 1
0x0176	0x1070      	BCF        R0, 0
0x0177	0x0870      	MOVF       R0, 0
0x0178	0x049F      	IORWF      ADCON0, 1
;__Lib_ADC_A_C.mpas,61 :: 		
0x0179	0x141F      	BSF        ADCON0, 0
;__Lib_ADC_A_C.mpas,64 :: 		
0x017A	0x20E5      	CALL       _Delay_22us
;__Lib_ADC_A_C.mpas,67 :: 		
0x017B	0x151F      	BSF        ADCON0, 2
;__Lib_ADC_A_C.mpas,70 :: 		
L__ADC_Read9:
0x017C	0x1D1F      	BTFSS      ADCON0, 2
0x017D	0x2980      	GOTO       L__ADC_Read10
0x017E	0x0000      	NOP
0x017F	0x297C      	GOTO       L__ADC_Read9
L__ADC_Read10:
;__Lib_ADC_A_C.mpas,73 :: 		
0x0180	0x101F      	BCF        ADCON0, 0
;__Lib_ADC_A_C.mpas,76 :: 		
0x0181	0x081E      	MOVF       ADRESH, 0
0x0182	0x00F1      	MOVWF      R0+1
0x0183	0x01F0      	CLRF       R0
0x0184	0x1683      	BSF        STATUS, 5
0x0185	0x081E      	MOVF       ADRESL, 0
0x0186	0x1283      	BCF        STATUS, 5
0x0187	0x0470      	IORWF      R0, 0
0x0188	0x00C5      	MOVWF      ADC_Read_local_result
0x0189	0x0871      	MOVF       R0+1, 0
0x018A	0x00C6      	MOVWF      ADC_Read_local_result+1
0x018B	0x3000      	MOVLW      0
0x018C	0x04C6      	IORWF      ADC_Read_local_result+1, 1
;__Lib_ADC_A_C.mpas,78 :: 		
0x018D	0x0845      	MOVF       ADC_Read_local_result, 0
0x018E	0x00F0      	MOVWF      R0
0x018F	0x0846      	MOVF       ADC_Read_local_result+1, 0
0x0190	0x00F1      	MOVWF      R0+1
0x0191	0x0008      	RETURN
; end of _ADC_Read
_Div_16x16_U:
;__Lib_Math.mpas,207 :: 		
;__Lib_Math.mpas,213 :: 		
0x0192	0x1283      	BCF        STATUS, 5
;__Lib_Math.mpas,214 :: 		
0x0193	0x1303      	BCF        STATUS, 6
;__Lib_Math.mpas,215 :: 		
0x0194	0x01F8      	CLRF       R8
;__Lib_Math.mpas,216 :: 		
0x0195	0x01F9      	CLRF       R9
;__Lib_Math.mpas,217 :: 		
0x0196	0x3010      	MOVLW      16
;__Lib_Math.mpas,218 :: 		
0x0197	0x00FC      	MOVWF      R12
;__Lib_Math.mpas,219 :: 		
0x0198	0x0D71      	RLF        R1, 0
;__Lib_Math.mpas,220 :: 		
0x0199	0x0DF8      	RLF        R8, 1
;__Lib_Math.mpas,221 :: 		
0x019A	0x0DF9      	RLF        R9, 1
;__Lib_Math.mpas,222 :: 		
0x019B	0x0874      	MOVF       R4, 0
;__Lib_Math.mpas,223 :: 		
0x019C	0x02F8      	SUBWF      R8, 1
;__Lib_Math.mpas,224 :: 		
0x019D	0x0875      	MOVF       R5, 0
;__Lib_Math.mpas,225 :: 		
0x019E	0x1C03      	BTFSS      STATUS, 0
;__Lib_Math.mpas,226 :: 		
0x019F	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.mpas,227 :: 		
0x01A0	0x02F9      	SUBWF      R9, 1
;__Lib_Math.mpas,228 :: 		
0x01A1	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,229 :: 		
0x01A2	0x29AA      	GOTO       $+8
;__Lib_Math.mpas,230 :: 		
0x01A3	0x0874      	MOVF       R4, 0
;__Lib_Math.mpas,231 :: 		
0x01A4	0x07F8      	ADDWF      R8, 1
;__Lib_Math.mpas,232 :: 		
0x01A5	0x0875      	MOVF       R5, 0
;__Lib_Math.mpas,233 :: 		
0x01A6	0x1803      	BTFSC      STATUS, 0
;__Lib_Math.mpas,234 :: 		
0x01A7	0x0F75      	INCFSZ     R5, 0
;__Lib_Math.mpas,235 :: 		
0x01A8	0x07F9      	ADDWF      R9, 1
;__Lib_Math.mpas,236 :: 		
0x01A9	0x1003      	BCF        STATUS, 0
;__Lib_Math.mpas,237 :: 		
0x01AA	0x0DF0      	RLF        R0, 1
;__Lib_Math.mpas,238 :: 		
0x01AB	0x0DF1      	RLF        R1, 1
;__Lib_Math.mpas,239 :: 		
0x01AC	0x0BFC      	DECFSZ     R12, 1
;__Lib_Math.mpas,240 :: 		
0x01AD	0x2998      	GOTO       $-21
;__Lib_Math.mpas,242 :: 		
0x01AE	0x0008      	RETURN
; end of _Div_16x16_U
_UART1_Write:
;__Lib_UART_c67.mpas,72 :: 		
;__Lib_UART_c67.mpas,73 :: 		
L__UART1_Write14:
0x01AF	0x1683      	BSF        STATUS, 5
0x01B0	0x1303      	BCF        STATUS, 6
0x01B1	0x1898      	BTFSC      TXSTA, 1
0x01B2	0x29B5      	GOTO       L__UART1_Write15
0x01B3	0x0000      	NOP
0x01B4	0x29AF      	GOTO       L__UART1_Write14
L__UART1_Write15:
;__Lib_UART_c67.mpas,74 :: 		
0x01B5	0x1283      	BCF        STATUS, 5
0x01B6	0x0844      	MOVF       FARG_UART1_Write_data_, 0
0x01B7	0x0099      	MOVWF      TXREG
;__Lib_UART_c67.mpas,75 :: 		
0x01B8	0x0008      	RETURN
; end of _UART1_Write
_main:
;esclab.mbas,134 :: 		main:
;esclab.mbas,135 :: 		trisa=%00001111
0x01B9	0x300F      	MOVLW      15
0x01BA	0x1683      	BSF        STATUS, 5
0x01BB	0x1303      	BCF        STATUS, 6
0x01BC	0x0085      	MOVWF      TRISA
;esclab.mbas,136 :: 		adcon1=%1101
0x01BD	0x300D      	MOVLW      13
0x01BE	0x009F      	MOVWF      ADCON1
;esclab.mbas,137 :: 		trisb=0
0x01BF	0x0186      	CLRF       TRISB
;esclab.mbas,138 :: 		trisc=%10001100
0x01C0	0x308C      	MOVLW      140
0x01C1	0x0087      	MOVWF      TRISC
;esclab.mbas,139 :: 		option_reg=%01111111
0x01C2	0x307F      	MOVLW      127
0x01C3	0x0081      	MOVWF      OPTION_REG
;esclab.mbas,140 :: 		Version_H=2
0x01C4	0x3002      	MOVLW      2
0x01C5	0x1283      	BCF        STATUS, 5
0x01C6	0x00A6      	MOVWF      _Version_H
;esclab.mbas,141 :: 		Version_L=5
0x01C7	0x3005      	MOVLW      5
0x01C8	0x00A8      	MOVWF      _Version_L
;esclab.mbas,142 :: 		Esclavo=eeprom_read(0)
0x01C9	0x01C2      	CLRF       FARG_EEPROM_Read_address
0x01CA	0x20EC      	CALL       _EEPROM_Read
0x01CB	0x0870      	MOVF       R0, 0
0x01CC	0x00A7      	MOVWF      _Esclavo
;esclab.mbas,144 :: 		for Iter=0 to 95
0x01CD	0x01B1      	CLRF       _Iter
L__main55:
;esclab.mbas,145 :: 		Mensaje[iter]=32
0x01CE	0x0831      	MOVF       _Iter, 0
0x01CF	0x3EA0      	ADDLW      _Mensaje
0x01D0	0x0084      	MOVWF      FSR
0x01D1	0x3020      	MOVLW      32
0x01D2	0x0080      	MOVWF      INDF
;esclab.mbas,146 :: 		next iter
0x01D3	0x0831      	MOVF       _Iter, 0
0x01D4	0x3A5F      	XORLW      95
0x01D5	0x1903      	BTFSC      STATUS, 2
0x01D6	0x29D9      	GOTO       L__main58
0x01D7	0x0AB1      	INCF       _Iter, 1
0x01D8	0x29CE      	GOTO       L__main55
L__main58:
;esclab.mbas,147 :: 		portc.4=0
0x01D9	0x1303      	BCF        STATUS, 6
0x01DA	0x1207      	BCF        PORTC, 4
;esclab.mbas,148 :: 		portc.5=0
0x01DB	0x1287      	BCF        PORTC, 5
;esclab.mbas,149 :: 		porta.4=1
0x01DC	0x1605      	BSF        PORTA, 4
;esclab.mbas,150 :: 		porta.5=1
0x01DD	0x1685      	BSF        PORTA, 5
;esclab.mbas,151 :: 		portc.0=1
0x01DE	0x1407      	BSF        PORTC, 0
;esclab.mbas,152 :: 		portc.1=1
0x01DF	0x1487      	BSF        PORTC, 1
;esclab.mbas,154 :: 		uart1_init(9600)
0x01E0	0x3019      	MOVLW      25
0x01E1	0x1683      	BSF        STATUS, 5
0x01E2	0x0099      	MOVWF      SPBRG
0x01E3	0x1518      	BSF        TXSTA, 2
0x01E4	0x20FA      	CALL       _UART1_Init
;esclab.mbas,155 :: 		RCIE_bit = 1                  ' enable interrupt on UART1 receive
0x01E5	0x1683      	BSF        STATUS, 5
0x01E6	0x168C      	BSF        RCIE_bit, 5
;esclab.mbas,156 :: 		TXIE_bit = 0                  ' disable interrupt on UART1 transmit
0x01E7	0x120C      	BCF        TXIE_bit, 4
;esclab.mbas,157 :: 		PEIE_bit = 1                  ' enable peripheral interrupts
0x01E8	0x170B      	BSF        PEIE_bit, 6
;esclab.mbas,158 :: 		GIE_bit = 1                   ' enable all interrupts
0x01E9	0x178B      	BSF        GIE_bit, 7
;esclab.mbas,159 :: 		clrwdt
0x01EA	0x0064      	CLRWDT
;esclab.mbas,160 :: 		while true
L__main60:
;esclab.mbas,161 :: 		nop
0x01EB	0x0000      	NOP
;esclab.mbas,162 :: 		wend
0x01EC	0x29EB      	GOTO       L__main60
0x01ED	0x29ED      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0004     [225]    _interrupt
0x00E5       [7]    _Delay_22us
0x00EC      [14]    _EEPROM_Read
0x00FA      [16]    _UART1_Init
0x010A      [13]    _UART1_Read
0x0117       [9]    _UART1_Data_Ready
0x0120      [52]    _CalcularCRC
0x0154      [18]    _ADC_Init
0x0166      [44]    _ADC_Read
0x0192      [29]    _Div_16x16_U
0x01AF      [10]    _UART1_Write
0x01B9      [53]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF
0x0001       [1]    TMR0
0x0002       [1]    PCL
0x0003       [0]    NOT_PD_bit
0x0003       [0]    C_bit
0x0003       [1]    STATUS
0x0003       [0]    DC_bit
0x0003       [0]    RP1_bit
0x0003       [0]    RP0_bit
0x0003       [0]    NOT_TO_bit
0x0003       [0]    Z_bit
0x0003       [0]    IRP_bit
0x0004       [1]    FSR
0x0004       [1]    FSRPTR
0x0005       [0]    RA0_bit
0x0005       [0]    RA1_bit
0x0005       [0]    RA2_bit
0x0005       [0]    RA3_bit
0x0005       [0]    RA5_bit
0x0005       [0]    RA4_bit
0x0005       [1]    PORTA
0x0006       [0]    RB3_bit
0x0006       [0]    RB2_bit
0x0006       [0]    RB0_bit
0x0006       [0]    RB1_bit
0x0006       [0]    RB5_bit
0x0006       [1]    PORTB
0x0006       [0]    RB6_bit
0x0006       [0]    RB4_bit
0x0006       [0]    RB7_bit
0x0007       [0]    RC5_bit
0x0007       [0]    RC7_bit
0x0007       [0]    RC0_bit
0x0007       [0]    RC2_bit
0x0007       [0]    RC1_bit
0x0007       [0]    RC6_bit
0x0007       [1]    PORTC
0x0007       [0]    RC4_bit
0x0007       [0]    RC3_bit
0x000A       [1]    PCLATH
0x000B       [1]    INTCON
0x000B       [0]    INTE_bit
0x000B       [0]    T0IF_bit
0x000B       [0]    T0IE_bit
0x000B       [0]    INTF_bit
0x000B       [0]    GIE_bit
0x000B       [0]    PEIE_bit
0x000B       [0]    RBIE_bit
0x000B       [0]    RBIF_bit
0x000B       [0]    TMR0IE_bit
0x000B       [0]    TMR0IF_bit
0x000C       [0]    CCP1IF_bit
0x000C       [0]    TMR2IF_bit
0x000C       [0]    TXIF_bit
0x000C       [0]    RCIF_bit
0x000C       [0]    ADIF_bit
0x000C       [0]    TMR1IF_bit
0x000C       [0]    SSPIF_bit
0x000C       [1]    PIR1
0x000D       [0]    CCP2IF_bit
0x000D       [1]    PIR2
0x000D       [0]    EEIF_bit
0x000D       [0]    CMIF_bit
0x000D       [0]    BCLIF_bit
0x000E       [1]    TMR1L
0x000F       [1]    TMR1H
0x0010       [0]    T1INSYNC_bit
0x0010       [0]    T1OSCEN_bit
0x0010       [0]    T1CKPS0_bit
0x0010       [0]    TMR1ON_bit
0x0010       [0]    T1SYNC_bit
0x0010       [0]    NOT_T1SYNC_bit
0x0010       [1]    T1CON
0x0010       [0]    T1CKPS1_bit
0x0010       [0]    TMR1CS_bit
0x0011       [1]    TMR2
0x0012       [0]    TOUTPS1_bit
0x0012       [0]    TOUTPS2_bit
0x0012       [0]    TOUTPS3_bit
0x0012       [0]    T2CKPS1_bit
0x0012       [0]    T2CKPS0_bit
0x0012       [1]    T2CON
0x0012       [0]    TOUTPS0_bit
0x0012       [0]    TMR2ON_bit
0x0013       [1]    SSPBUF
0x0014       [0]    SSPM2_bit
0x0014       [0]    SSPM1_bit
0x0014       [0]    SSPM3_bit
0x0014       [1]    SSPCON
0x0014       [0]    SSPEN_bit
0x0014       [0]    SSPM0_bit
0x0014       [0]    SSPOV_bit
0x0014       [0]    WCOL_bit
0x0014       [0]    CKP_bit
0x0015       [1]    CCPR1L
0x0015       [2]    CCPR1
0x0016       [1]    CCPR1H
0x0017       [0]    CCP1M0_bit
0x0017       [0]    CCP1Y_bit
0x0017       [0]    CCP1X_bit
0x0017       [0]    CCP1M1_bit
0x0017       [0]    CCP1M3_bit
0x0017       [0]    CCP1M2_bit
0x0017       [1]    CCP1CON
0x0018       [0]    ADDEN_bit
0x0018       [0]    SREN_bit
0x0018       [0]    FERR_bit
0x0018       [0]    SPEN_bit
0x0018       [1]    RCSTA
0x0018       [0]    RCD8_bit
0x0018       [0]    OERR_bit
0x0018       [0]    CREN_bit
0x0018       [0]    RC8_9_bit
0x0018       [0]    RC9_bit
0x0018       [0]    RX9D_bit
0x0018       [0]    RX9_bit
0x0018       [0]    NOT_RC8_bit
0x0019       [1]    TXREG
0x001A       [1]    RCREG
0x001B       [2]    CCPR2
0x001B       [1]    CCPR2L
0x001C       [1]    CCPR2H
0x001D       [0]    CCP2Y_bit
0x001D       [0]    CCP2X_bit
0x001D       [1]    CCP2CON
0x001D       [0]    CCP2M2_bit
0x001D       [0]    CCP2M1_bit
0x001D       [0]    CCP2M3_bit
0x001D       [0]    CCP2M0_bit
0x001E       [1]    ADRESH
0x001F       [0]    GO_DONE_bit
0x001F       [1]    ADCON0
0x001F       [0]    ADON_bit
0x001F       [0]    CHS1_bit
0x001F       [0]    CHS2_bit
0x001F       [0]    GO_bit
0x001F       [0]    CHS0_bit
0x001F       [0]    NOT_DONE_bit
0x001F       [0]    ADCS1_bit
0x001F       [0]    ADCS0_bit
0x0023       [2]    _Temp
0x0025       [1]    _Temp1_H
0x0026       [1]    _Version_H
0x0027       [1]    _Esclavo
0x0028       [1]    _Version_L
0x0029       [2]    ___DoICPAddr
0x002B       [3]    _ADC_Get_Sample_Ptr
0x002E       [1]    _Entrada2
0x002F       [1]    _Temp1_L
0x0030       [1]    _Entrada1
0x0031       [1]    _Iter
0x0032       [1]    _CRC_H
0x0033       [1]    _CRC_L
0x0034       [1]    _bites
0x0035       [2]    _CRC
0x0037       [1]    _Longitud
0x0038       [2]    _Suma
0x003A       [1]    _CRC_ok
0x003B       [1]    _Recivido
0x003C       [4]    _Llamada
0x0040       [1]    ___savePCLATH
0x0041       [1]    ___saveSTATUS
0x0042       [1]    FARG_EEPROM_Read_address
0x0043       [1]    FLOC__interrupt
0x0044       [1]    FARG_ADC_Read_channel
0x0044       [1]    FARG_UART1_Write_data_
0x0045       [2]    ADC_Read_local_result
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x0081       [0]    PS2_bit
0x0081       [0]    T0CS_bit
0x0081       [0]    T0SE_bit
0x0081       [0]    PSA_bit
0x0081       [0]    INTEDG_bit
0x0081       [1]    OPTION_REG
0x0081       [0]    NOT_RBPU_bit
0x0081       [0]    PS1_bit
0x0081       [0]    PS0_bit
0x0085       [0]    TRISA3_bit
0x0085       [0]    TRISA1_bit
0x0085       [0]    TRISA0_bit
0x0085       [0]    TRISA4_bit
0x0085       [1]    TRISA
0x0085       [0]    TRISA5_bit
0x0085       [0]    TRISA2_bit
0x0086       [0]    TRISB0_bit
0x0086       [0]    TRISB1_bit
0x0086       [0]    TRISB3_bit
0x0086       [0]    TRISB2_bit
0x0086       [0]    TRISB7_bit
0x0086       [0]    TRISB5_bit
0x0086       [0]    TRISB6_bit
0x0086       [1]    TRISB
0x0086       [0]    TRISB4_bit
0x0087       [0]    TRISC4_bit
0x0087       [1]    TRISC
0x0087       [0]    TRISC2_bit
0x0087       [0]    TRISC3_bit
0x0087       [0]    TRISC5_bit
0x0087       [0]    TRISC7_bit
0x0087       [0]    TRISC1_bit
0x0087       [0]    TRISC6_bit
0x0087       [0]    TRISC0_bit
0x008C       [0]    CCP1IE_bit
0x008C       [0]    ADIE_bit
0x008C       [0]    RCIE_bit
0x008C       [0]    SSPIE_bit
0x008C       [0]    TMR1IE_bit
0x008C       [1]    PIE1
0x008C       [0]    TMR2IE_bit
0x008C       [0]    TXIE_bit
0x008D       [1]    PIE2
0x008D       [0]    CMIE_bit
0x008D       [0]    CCP2IE_bit
0x008D       [0]    EEIE_bit
0x008D       [0]    BCLIE_bit
0x008E       [1]    PCON
0x008E       [0]    NOT_BOR_bit
0x008E       [0]    NOT_POR_bit
0x008E       [0]    NOT_BO_bit
0x0091       [0]    ACKDT_bit
0x0091       [0]    PEN_bit
0x0091       [1]    SSPCON2
0x0091       [0]    RSEN_bit
0x0091       [0]    GCEN_bit
0x0091       [0]    RCEN_bit
0x0091       [0]    ACKSTAT_bit
0x0091       [0]    ACKEN_bit
0x0091       [0]    SEN_bit
0x0092       [1]    PR2
0x0093       [1]    SSPADD
0x0094       [0]    BF_bit
0x0094       [1]    SSPSTAT
0x0094       [0]    SMP_bit
0x0094       [0]    I2C_READ_bit
0x0094       [0]    I2C_START__bit
0x0094       [0]    S_bit
0x0094       [0]    I2C_STOP__bit
0x0094       [0]    D_bit
0x0094       [0]    DATA_ADDRESS_bit
0x0094       [0]    UA_bit
0x0094       [0]    I2C_DATA_bit
0x0094       [0]    D_A_bit
0x0094       [0]    READ_WRITE_bit
0x0094       [0]    P_bit
0x0094       [0]    CKE_bit
0x0094       [0]    R_bit
0x0094       [0]    R_W_bit
0x0094       [0]    NOT_WRITE_bit
0x0094       [0]    NOT_ADDRESS_bit
0x0094       [0]    NOT_A_bit
0x0094       [0]    NOT_W_bit
0x0098       [0]    TX8_9_bit
0x0098       [0]    TRMT_bit
0x0098       [0]    TX9_bit
0x0098       [0]    NOT_TX8_bit
0x0098       [1]    TXSTA
0x0098       [0]    SYNC_bit
0x0098       [0]    TXEN_bit
0x0098       [0]    BRGH_bit
0x0098       [0]    CSRC_bit
0x0098       [0]    TXD8_bit
0x0098       [0]    TX9D_bit
0x0099       [1]    SPBRG
0x009C       [0]    C1INV_bit
0x009C       [1]    CMCON
0x009C       [0]    CM2_bit
0x009C       [0]    CM1_bit
0x009C       [0]    C2OUT_bit
0x009C       [0]    CIS_bit
0x009C       [0]    C2INV_bit
0x009C       [0]    C1OUT_bit
0x009C       [0]    CM0_bit
0x009D       [0]    CVR0_bit
0x009D       [0]    CVREN_bit
0x009D       [0]    CVR3_bit
0x009D       [0]    CVRR_bit
0x009D       [0]    CVROE_bit
0x009D       [1]    CVRCON
0x009D       [0]    CVR1_bit
0x009D       [0]    CVR2_bit
0x009E       [1]    ADRESL
0x009F       [1]    ADCON1
0x009F       [0]    PCFG3_bit
0x009F       [0]    PCFG0_bit
0x009F       [0]    ADCS2_bit
0x009F       [0]    ADFM_bit
0x009F       [0]    PCFG1_bit
0x009F       [0]    PCFG2_bit
0x00A0      [96]    _Mensaje
0x010C       [1]    EEDATA
0x010D       [1]    EEADR
0x010E       [1]    EEDATH
0x010F       [1]    EEADRH
0x018C       [0]    WREN_bit
0x018C       [0]    WR_bit
0x018C       [0]    WRERR_bit
0x018C       [0]    EEPGD_bit
0x018C       [1]    EECON1
0x018C       [0]    RD_bit
0x018D       [1]    EECON2
//** Label List: ** 
//----------------------------------------------
  L_end__CalcularCRC
  L__CalcularCRC1
  L__CalcularCRC2
  L__CalcularCRC3
  L__CalcularCRC4
  L__CalcularCRC5
  L__CalcularCRC6
  L__CalcularCRC7
  L__CalcularCRC8
  L__CalcularCRC9
  L__CalcularCRC10
  L__CalcularCRC11
  L__CalcularCRC12
  L__CalcularCRC13
  L_end__interrupt
  L__interrupt15
  L__interrupt16
  L__interrupt17
  L__interrupt18
  L__interrupt19
  L__interrupt20
  L__interrupt21
  L__interrupt22
  L__interrupt23
  L__interrupt24
  L__interrupt25
  L__interrupt26
  L__interrupt27
  L__interrupt28
  L__interrupt29
  L__interrupt30
  L__interrupt31
  L__interrupt32
  L__interrupt33
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  L__interrupt38
  L__interrupt39
  L__interrupt40
  L__interrupt41
  L__interrupt42
  L__interrupt43
  L__interrupt44
  L__interrupt45
  L__interrupt46
  L__interrupt47
  L__interrupt48
  L__interrupt49
  L__interrupt50
  L__interrupt51
  L__interrupt52
  L_end__main
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L__main61
  L__main62
  L__main63
  _CalcularCRC
  _interrupt
  L__interrupt64
  _main
  L_end__EEPROM_Read
  L_end__EEPROM_Write
  L__EEPROM_Write2
  L__EEPROM_Write3
  L__EEPROM_Write4
  L__EEPROM_Write5
  L__EEPROM_Write6
  _EEPROM_Read
  _EEPROM_Write
  L__EEPROM_Write7
  L__EEPROM_Write8
  L_end__UART1_Init
  L__UART1_Init1
  L__UART1_Init2
  L__UART1_Init3
  L__UART1_Init4
  L__UART1_Init5
  L_end__UART1_Data_Ready
  L_end__UART1_Read
  L__UART1_Read8
  L__UART1_Read9
  L__UART1_Read10
  L_end__UART1_TX_Idle
  L_end__UART1_Write
  L__UART1_Write13
  L__UART1_Write14
  L__UART1_Write15
  L__UART1_Write16
  L__UART1_Write17
  L_end__UART1_Write_Text
  L__UART1_Write_Text19
  L__UART1_Write_Text20
  L__UART1_Write_Text21
  L__UART1_Write_Text22
  L__UART1_Write_Text23
  L_end__UART1_Read_Text
  L__UART1_Read_Text25
  L__UART1_Read_Text26
  L__UART1_Read_Text27
  L__UART1_Read_Text28
  L__UART1_Read_Text29
  L__UART1_Read_Text30
  L__UART1_Read_Text31
  L__UART1_Read_Text32
  L__UART1_Read_Text33
  L__UART1_Read_Text34
  L__UART1_Read_Text35
  L__UART1_Read_Text36
  L__UART1_Read_Text37
  L__UART1_Read_Text38
  L__UART1_Read_Text39
  L__UART1_Read_Text40
  L__UART1_Read_Text41
  L__UART1_Read_Text42
  L__UART1_Read_Text43
  L__UART1_Read_Text44
  L__UART1_Read_Text45
  L__UART1_Read_Text46
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_TX_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
  L_end__CalcularCRC
  L__CalcularCRC1
  L__CalcularCRC2
  L__CalcularCRC3
  L__CalcularCRC4
  L__CalcularCRC5
  L__CalcularCRC6
  L__CalcularCRC7
  L__CalcularCRC8
  L__CalcularCRC9
  L__CalcularCRC10
  L__CalcularCRC11
  L__CalcularCRC12
  L__CalcularCRC13
  L_end__interrupt
  L__interrupt15
  L__interrupt16
  L__interrupt17
  L__interrupt18
  L__interrupt19
  L__interrupt20
  L__interrupt21
  L__interrupt22
  L__interrupt23
  L__interrupt24
  L__interrupt25
  L__interrupt26
  L__interrupt27
  L__interrupt28
  L__interrupt29
  L__interrupt30
  L__interrupt31
  L__interrupt32
  L__interrupt33
  L__interrupt34
  L__interrupt35
  L__interrupt36
  L__interrupt37
  L__interrupt38
  L__interrupt39
  L__interrupt40
  L__interrupt41
  L__interrupt42
  L__interrupt43
  L__interrupt44
  L__interrupt45
  L__interrupt46
  L__interrupt47
  L__interrupt48
  L__interrupt49
  L__interrupt50
  L__interrupt51
  L__interrupt52
  L_end__main
  L__main54
  L__main55
  L__main56
  L__main57
  L__main58
  L__main59
  L__main60
  L__main61
  L__main62
  L__main63
  _CalcularCRC
  _interrupt
  L__interrupt64
  _main
  L_end__ADC_Init
  L_end__ADC_Get_Sample
  L__ADC_Get_Sample2
  L__ADC_Get_Sample3
  L__ADC_Get_Sample4
  L__ADC_Get_Sample5
  L__ADC_Get_Sample6
  L_end__ADC_Read
  L__ADC_Read8
  L__ADC_Read9
  L__ADC_Read10
  L__ADC_Read11
  L__ADC_Read12
  _ADC_Init
  _ADC_Get_Sample
  _ADC_Read
  L_end__Get_Fosc_kHz
  L_end__Delay_1us
  L_end__Delay_10us
  L__Delay_10us3
  L_end__Delay_22us
  L__Delay_22us5
  L_end__Delay_50us
  L__Delay_50us7
  L_end__Delay_80us
  L__Delay_80us9
  L_end__Delay_500us
  L__Delay_500us11
  L_end__Delay_5500us
  L__Delay_5500us13
  L_end__Delay_1ms
  L__Delay_1ms15
  L_end__Delay_5ms
  L__Delay_5ms17
  L_end__Delay_8ms
  L__Delay_8ms19
  L_end__Delay_10ms
  L__Delay_10ms21
  L_end__Delay_100ms
  L__Delay_100ms23
  L_end__Delay_1sec
  L__Delay_1sec25
  L_end__Delay_Cyc
  L__Delay_Cyc27
  L__Delay_Cyc28
  L__Delay_Cyc29
  L__Delay_Cyc30
  L__Delay_Cyc31
  L_end__VDelay_ms
  L__VDelay_ms33
  L__VDelay_ms34
  L__VDelay_ms35
  L__VDelay_ms36
  L__VDelay_ms37
  L__VDelay_ms38
  L__VDelay_ms39
  L__VDelay_ms40
  L_end__VDelay_Advanced_ms
  L__VDelay_Advanced_ms42
  L__VDelay_Advanced_ms43
  L__VDelay_Advanced_ms44
  L__VDelay_Advanced_ms45
  L__VDelay_Advanced_ms46
  L__VDelay_Advanced_ms47
  L__VDelay_Advanced_ms48
  L__VDelay_Advanced_ms49
  _Get_Fosc_kHz
  _Delay_1us
  _Delay_10us
  _Delay_22us
  _Delay_50us
  _Delay_80us
  _Delay_500us
  _Delay_5500us
  _Delay_1ms
  _Delay_5ms
  _Delay_8ms
  _Delay_10ms
  _Delay_100ms
  _Delay_1sec
  _Delay_Cyc
  _VDelay_ms
  L__VDelay_ms50
  L__VDelay_ms51
  L__VDelay_ms52
  L__VDelay_ms53
  _VDelay_Advanced_ms
  L__VDelay_Advanced_ms54
  L__VDelay_Advanced_ms55
  L__VDelay_Advanced_ms56
  L__VDelay_Advanced_ms57
  L_end__Mul_8x8_U
  L_end__Mul_16x16_U
  L_end__Div_8x8_U
  L__Div_8x8_U3
  L__Div_8x8_U4
  L__Div_8x8_U5
  L_end__Div_16x16_U
  L_end__Mul_8x8_S
  L_end__Mul_16x16_S
  L_end__Div_16x16_S_L
  L_end__Div_16x16_S
  L__Div_16x16_S11
  L__Div_16x16_S12
  L__Div_16x16_S13
  L__Div_16x16_S14
  L__Div_16x16_S15
  L__Div_16x16_S16
  L_end__Div_8x8_S
  L_end__SDIV3232L
  LOOPS3232A
  SADD22LA
  SOK22LA
  SADD22L8
  SOK22L8
  LOOPS3232B
  SADD22LB
  SOK22LB
  SADD22L16
  SOK22L16
  LOOPS3232C
  SADD22LC
  SOK22LC
  SADD22L24
  SOK22L24
  LOOPS3232D
  SADD22LD
  SOK22LD
  SOK22L
  L_end__COMFREM
  L_end__Div_32x32_S
  L__Div_32x32_S25
  L__Div_32x32_S26
  L__Div_32x32_S27
  L__Div_32x32_S28
  L__Div_32x32_S29
  L__Div_32x32_S30
  L__Div_32x32_S31
  L__Div_32x32_S32
  L__Div_32x32_S33
  L__Div_32x32_S34
  L__Div_32x32_S35
  L__Div_32x32_S36
  FXD3232S
  END_ALL
  CA3232S
  C3232SX
  C3232SX1
  C3232S
  C3232S2
  C3232SX4
  C3232SOK
  C3232SX3
  C3232SX2
  avoid_comfrem
  L_end__Div_32x32_U
  LOOPU3232A
  UADD22LA
  UOK22LA
  UADD22L8
  UOK22L8
  LOOPU3232B
  UADD22LB
  UOK22LB
  UADD22L16
  UOK22L16
  LOOPU3232C
  UADD22LC
  UOK22LC
  UADD22L24
  UOK22L24
  LOOPU3232D
  UADD22LD
  UOK22LD
  UOK22L
  L_end__Mul_32x32_U
  _NEXT
  _EXIT2
  _LOOP
  _EXIT1
  L_end__Mul_32x32_S
  _IF_FIRST
  _IF_SECOND
  _INVERCE_FIRST
  _MULT
  _INBERSE_SECOND
  _EXIT
  _Mul_8x8_U
  _Mul_16x16_U
  _Div_8x8_U
  _Div_16x16_U
  _Mul_8x8_S
  _Mul_16x16_S
  _Div_16x16_S_L
  _Div_16x16_S
  _Div_8x8_S
  _SDIV3232L
  _COMFREM
  _Div_32x32_S
  _Div_32x32_U
  _Mul_32x32_U
  _Mul_32x32_S
  L_end__UART1_Init
  L__UART1_Init1
  L__UART1_Init2
  L__UART1_Init3
  L__UART1_Init4
  L__UART1_Init5
  L_end__UART1_Data_Ready
  L_end__UART1_Read
  L__UART1_Read8
  L__UART1_Read9
  L__UART1_Read10
  L_end__UART1_TX_Idle
  L_end__UART1_Write
  L__UART1_Write13
  L__UART1_Write14
  L__UART1_Write15
  L__UART1_Write16
  L__UART1_Write17
  L_end__UART1_Write_Text
  L__UART1_Write_Text19
  L__UART1_Write_Text20
  L__UART1_Write_Text21
  L__UART1_Write_Text22
  L__UART1_Write_Text23
  L_end__UART1_Read_Text
  L__UART1_Read_Text25
  L__UART1_Read_Text26
  L__UART1_Read_Text27
  L__UART1_Read_Text28
  L__UART1_Read_Text29
  L__UART1_Read_Text30
  L__UART1_Read_Text31
  L__UART1_Read_Text32
  L__UART1_Read_Text33
  L__UART1_Read_Text34
  L__UART1_Read_Text35
  L__UART1_Read_Text36
  L__UART1_Read_Text37
  L__UART1_Read_Text38
  L__UART1_Read_Text39
  L__UART1_Read_Text40
  L__UART1_Read_Text41
  L__UART1_Read_Text42
  L__UART1_Read_Text43
  L__UART1_Read_Text44
  L__UART1_Read_Text45
  L__UART1_Read_Text46
  _UART1_Init
  _UART1_Data_Ready
  _UART1_Read
  _UART1_TX_Idle
  _UART1_Write
  _UART1_Write_Text
  _UART1_Read_Text
